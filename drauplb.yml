---

- hosts: localhost
  tasks:
    - name: Get my current IP address
      uri:
        url: http://checkip.amazonaws.com/
        return_content: yes
      register: my_ip

    - name: Create simple security group
      ec2_group:
        name: draup-sg
        description: A security group for my current IP
        region: us-east-2
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: "{{ my_ip.content | replace('\n', '') }}/32"
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ my_ip.content | replace('\n', '') }}/32"
        rules_egress:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: webservers_group

    - name: Create the ELB only listening over port 80
      ec2_elb_lb:
        name: draup-load-balancer
        state: present
        region: us-east-2
        zones:
          - us-east-2a
          - us-east-2b
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
      register: elb

    - name: Create EC2 instances
      ec2:
        key_name: draup
        instance_type: t2.micro
        image: ami-0d5d9d301c853a04a
        region: us-east-2
        group_id:
          - sg-00bf8c5cdcee0d10a
          - sg-0fdef3a7733aeed56
        wait: yes
        instance_tags:
          application: draup
        exact_count: 2
        count_tag:
          application: draup
      register: ec2_instances

    - name: Store EC2 instance IPs to provision against
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: ec2_instance_ips
      with_items: "{{ ec2_instances.tagged_instances }}"

- hosts: ec2_instance_ips
  remote_user: ubuntu
  become: True
  tasks:
    - name: ensure nginx is at the latest version
      apt: name=nginx state=latest update_cache=true
    - name: start nginx
      service:
          name: nginx
          state: started
    - name: Create default index page
      copy:
        dest: /var/www/html/index.html
        content: "Howdy from {{ ansible_hostname }}"
    - name: Restart nginx
      service:
        name: nginx
        state: restarted

- hosts: localhost
  tasks:
    - name: Add each EC2 instance to the ELB
      ec2_elb:
        state: present
        ec2_elbs: "draup-load-balancer"
        region: "{{ item.region }}"
        instance_id: "{{ item.id }}"
      with_items: "{{ ec2_instances.tagged_instances }}"
